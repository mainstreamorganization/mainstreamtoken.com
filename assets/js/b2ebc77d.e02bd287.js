"use strict";(self.webpackChunkmainstreamtoken_com=self.webpackChunkmainstreamtoken_com||[]).push([[8065],{4865:(e,n,s)=>{s.d(n,{A:()=>o});s(6540);const i="warningBar__OFI";var t=s(4848);const o=()=>(0,t.jsxs)("div",{className:i,children:["\u26a0\ufe0f Disclaimer: Mainstream Token is an AI and community-driven entertainment project with no inherent financial value or guarantee of return. ",(0,t.jsx)("br",{}),"It operates without a formal team or roadmap and is intended for informational and entertainment purposes only. All content is AI-generated. ",(0,t.jsx)("br",{}),"*Please review the ",(0,t.jsx)("a",{href:"/docs/license/overview#legal-considerations",style:{color:"white",textDecoration:"underline"},children:"legal considerations"}),"."]})},2611:(e,n,s)=>{s.r(n),s.d(n,{default:()=>a});var i=s(6540),t=s(5391),o=s(4865),r=s(233),l=s(4848);const a=function(){const[e,n]=(0,i.useState)(""),[s,a]=(0,i.useState)(""),[c,d]=(0,i.useState)(""),[p,u]=(0,i.useState)(null),[m,h]=(0,i.useState)("");return(0,l.jsxs)(t.A,{title:"MTL Decoder",description:"Decode MTL License Strings",children:[(0,l.jsxs)("div",{className:r.A.appContainer,children:[(0,l.jsx)("h1",{children:"MTL Decoder"}),(0,l.jsxs)("div",{className:r.A.formGroup,children:[(0,l.jsx)("label",{children:"Enter License String:"}),(0,l.jsx)("textarea",{value:c,onChange:e=>d(e.target.value),rows:12,style:{width:"100%",minWidth:"600px"}})]}),(0,l.jsx)("button",{className:"button button--primary",onClick:()=>{try{if(!c.trim().startsWith("```mtl:0.1")&&!c.trim().startsWith("MTLv1"))throw new Error("Invalid license format. Must start with MTLv0.1- or MTLv0.1/ or be wrapped in ```mtl:0.1");const n=c.replace(/```mtlv0.1\n|\n```/g,"").trim();console.log("Input license string:",c),console.log("License string type:",typeof c);const s=n.split("\n").filter((e=>""!==e.trim()));console.log("Split lines:",s);const i=s.length>1?s[1]:"";console.log("Main part:",i);const t=s.slice(2).filter((e=>/^[a-zA-Z]+:/.test(e)));if(console.log("Payment wallet lines:",t),!i)throw new Error("Invalid license format: Empty main part");const o=i.split(/[-/]/);let r;console.log("About to process parts:",o);const l=o[0].includes("-")?o[0].split("-")[1]:"";r=l?l.split("").map((e=>{switch(e){case"P":return{code:"P",name:"Personal Use",description:"License for individual, non-commercial use only"};case"C":return{code:"C",name:"Commercial Use",description:"License for business and commercial applications"};case"N":return{code:"N",name:"Non-Profit Use",description:"License for non-profit organization use"};case"D":return{code:"D",name:"Derivative Work",description:"License allows creation of derivative works"};default:return{code:e,name:`Unknown (${e})`,description:"Unknown license type"}}})):[{code:"A",name:"All Uses",description:"License allows all types of usage including Personal Use, Commercial Use, Non-Profit Use, and Derivative Works"}],console.log("Processed types:",r);let a=null;if(console.log("Checking for fee and splits in parts:",o),o&&o.length>2){const y=o[2];if(console.log("Fee part:",y),y&&y.includes("-")){const[w,...M]=y.split(/[-:]/);console.log("Extracted fee:",w),console.log("Extracted splits:",M),a={fee:w,splits:M}}}console.log("Processed feeAndSplits:",a);const d=o.length>3?(o[3]||"").split("~")[0]:"";console.log("Condition string:",d);const p=d.match(/\+([^<>\[\]\{\}=!]*)/);console.log("Duration match:",p);const m=p?p[1]:"None";console.log("Extracted duration value:",m);const x={duration:m,revenueCap:(d.match(/<(\d+[KMB]?)/)||[])[1]||"None",revenueMin:(d.match(/>(\d+[KMB]?)/)||[])[1]||"None",revenueExact:(d.match(/=(\d+[KMB]?)/)||[])[1]||"None",revenueMax:(d.match(/!>(\d+[KMB]?)/)||[])[1]||"None",regions:(d.match(/\[(.*?)\]/)||[])[1]||"Global",states:(d.match(/\((.*?)\)/)||[])[1]||"All",usage:(d.match(/\{(.*?)\}/)||[])[1]||"All"},v={version:"MTLv1",types:[{code:"A",name:"All Uses (Personal, Commercial, Non-Profit, Derivative)",description:"License allows all types of usage including Personal Use, Commercial Use, Non-Profit Use, and Derivative Works"}],tokens:{amount:o[2]||"0",description:`Requires holding ${o[2]||"0"} tokens to maintain this license`},fee:a?{percentage:a.fee,splits:a.splits,description:`${a.fee}% fee with revenue splits: ${a.splits.map(((e,n)=>`Split ${n+1}: ${e}%`)).join(", ")}`}:"No fee specified",duration:{value:x.duration,description:f(x.duration)},feeAndSplits:a?{fee:`${a.fee}%`,splits:a.splits.map(((e,n)=>`Split ${n+1}: ${e}%`)),description:`${a.fee}% fee with revenue splits: ${a.splits.map(((e,n)=>`${e}%`)).join(":")}`}:"No fee or revenue splits specified",conditions:{duration:{value:x.duration,description:f(x.duration)},revenue:{cap:"None"!==x.revenueCap?`Cap: ${x.revenueCap}`:null,min:"None"!==x.revenueMin?`Min: ${x.revenueMin}`:null,exact:"None"!==x.revenueExact?`Exact: ${x.revenueExact}`:null,max:"None"!==x.revenueMax?`Max: ${x.revenueMax}`:null,description:g(x)},regions:{value:x.regions,description:j(x.regions)},states:{value:x.states,description:N(x.states)},usage:{value:x.usage,description:A(x.usage)}},addendum:s[0].split("~")[1]?{value:s[0].split("~")[1],description:s[0].split("~")[1]}:"No addendum specified",paymentWallet:t.join("\n")||"Not specified"};function f(e){if("None"===e)return"No duration specified (perpetual)";console.log("Getting description for duration:",e);if("\u221e"===e)return"Perpetual license";const n=e.match(/(\d+)([smhdwMY])/);return console.log("Duration regex match:",n),n?`Valid for ${n[1]} ${{s:"seconds",m:"minutes",h:"hours",d:"days",w:"weeks",M:"months",Y:"years","\u221e":"perpetual"}[n[2].toLowerCase()]||"unknown units"}`:"Invalid duration format"}function g(e){const n=[];return"None"!==e.revenueCap&&n.push(`Maximum revenue threshold capped at ${e.revenueCap}`),"None"!==e.revenueMin&&n.push(`Must maintain minimum of ${e.revenueMin}`),"None"!==e.revenueExact&&n.push(`Must maintain exactly ${e.revenueExact}`),"None"!==e.revenueMax&&n.push(`Hard limit of ${e.revenueMax}`),n.length?n.join("; "):"No revenue conditions specified"}function j(e){if("Global"===e)return"Valid worldwide";const n=e.match(/!(.*)/);return n?`Valid everywhere except: ${n[1]}`:`Valid only in: ${e}`}function N(e){if("All"===e)return"Valid in all states";const n=e.match(/!(.*)/);return n?`Valid everywhere except: ${n[1]}`:`Valid only in: ${e}`}function A(e){if("All"===e)return"All usage types permitted";const n={W:"Web",M:"Mobile",G:"Games"};return`Usage types: ${e.split(",").map((e=>{const s=e.match(/!(.*)/);return s?`No ${n[s[1]]||s[1]}`:n[e]||e})).join(", ")}`}u(v),h("")}catch(e){h(e.message),u(null)}},children:"Decode License"}),m&&(0,l.jsx)("div",{className:r.A.error,style:{marginTop:"1rem"},children:m}),p&&(0,l.jsxs)("div",{className:r.A.licenseString,children:[(0,l.jsx)("h2",{children:"Decoded License Information:"}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Version"}),(0,l.jsx)("p",{children:p.version})]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"License Types"}),p.types.map(((e,n)=>(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:e.name}),(0,l.jsx)("p",{children:e.description})]},n)))]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Token Requirements"}),(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Amount:"})," ",p.tokens.amount]}),(0,l.jsx)("p",{children:p.tokens.description})]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Fee and Revenue Splits"}),"string"==typeof p.feeAndSplits?(0,l.jsx)("p",{children:p.feeAndSplits}):(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Fee:"})," ",p.feeAndSplits.fee]}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"Splits:"}),(0,l.jsx)("ul",{children:p.feeAndSplits.splits.map(((e,n)=>(0,l.jsx)("li",{children:e},n)))})]}),(0,l.jsx)("p",{children:p.feeAndSplits.description})]})]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Conditions"}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"Duration:"}),(0,l.jsx)("p",{children:p.conditions.duration.description})]}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"Revenue Conditions:"}),(0,l.jsx)("p",{children:p.conditions.revenue.description}),Object.entries(p.conditions.revenue).filter((e=>{let[n,s]=e;return"description"!==n&&s})).map((e=>{let[n,s]=e;return(0,l.jsx)("div",{className:r.A.detail,children:s},n)}))]}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"Geographic Restrictions:"}),(0,l.jsx)("p",{children:p.conditions.regions.description})]}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"State Restrictions:"}),(0,l.jsx)("p",{children:p.conditions.states.description})]}),(0,l.jsxs)("div",{className:r.A.subsection,children:[(0,l.jsx)("strong",{children:"Usage Types:"}),(0,l.jsx)("p",{children:p.conditions.usage.description})]})]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Payment Token & Wallet"}),(0,l.jsx)("div",{style:{whiteSpace:"pre-line"},children:p.paymentWallet})]}),(0,l.jsxs)("div",{className:r.A.section,children:[(0,l.jsx)("h3",{children:"Addendum"}),"string"==typeof p.addendum?(0,l.jsx)("p",{children:p.addendum}):(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)("p",{children:[(0,l.jsx)("strong",{children:"Value:"})," ",p.addendum.value]}),(0,l.jsx)("p",{children:p.addendum.description})]})]})]})]}),(0,l.jsx)(o.A,{})]})}},233:(e,n,s)=>{s.d(n,{A:()=>i});const i={appContainer:"appContainer_hXmV",formGroup:"formGroup_V9jP",checkboxGroup:"checkboxGroup_AX2b",tooltip:"tooltip_VafR",inputError:"inputError_kPTJ",error:"error_ytU3",licenseString:"licenseString_Nl7S",section:"section_bjTr",subsection:"subsection_osPe",detail:"detail_SPyg"}}}]);